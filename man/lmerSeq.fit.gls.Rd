% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmerSeq_fit_gls.R
\name{lmerSeq.fit.gls}
\alias{lmerSeq.fit.gls}
\title{Function to Fit linear mixed models to transformed RNA-Seq data}
\usage{
lmerSeq.fit.gls(
  form = NULL,
  cor_str = NULL,
  expr_mat = NULL,
  gene_names = NULL,
  sample_data = NULL,
  weights = NULL,
  method = "REML",
  parallel = F,
  cores = 2
)
}
\arguments{
\item{form}{A one-sided linear formula describing both the fixed-effects part of the model using the syntax of the nlme package}

\item{cor_str}{Correlation structure defined as one of the corStruct options available in the nlme package}

\item{expr_mat}{A (G x N) numeric matrix or data frame of transformed RNA-seq counts (e.g. using VST from DESeq2), with genes in rows and samples in columns. G = number of genes.  N = number of samples.}

\item{gene_names}{An optional character vector of gene names (length G).  If unspecified, row names from the expression matrix will be used.}

\item{sample_data}{Data frame with N rows containing the fixed- and random-effects terms included in the formula.  The rows of the data frame must correspond (and be in the same order as) the columns of the expression matrix.}

\item{method}{Should the models be fit with REML or regular ML?}

\item{parallel}{If on Mac or linux, use forking (via mclapply) to parallelize fits}

\item{cores}{Number of cores to use (default is 2)}
}
\description{
Wrapper function that its linear mixed models to (transformed) RNA-Seq data using the utilities present using the gls function from the nlme package.
}
\examples{
data("expr_data")
vst_expr <- expr_example$vst_expr
sample_meta_data <- expr_example$sample_meta_data

##  Only including 10 genes in the expression matrix
vst_expr <- vst_expr[1:10, ]

##  Fit the Model
fit.lmerSeq.gls <- lmerSeq.fit.gls(form = ~ group * time,
                           cor_str = corCompSymm(form = ~ 1 | id),
                           expr_mat = vst_expr,
                           sample_data = sample_meta_data,
                           method = 'REML')

}
